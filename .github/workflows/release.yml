# Based on https://medium.com/flutter-community/automating-publishing-your-flutter-apps-to-google-play-using-github-actions-2f67ac582032

on:
  workflow_call:

jobs:
  release:
    name: Build and Release
    runs-on: ubuntu-latest
    env:
      GRADLE_OPTS: -Xmx8g
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: "17.x"
      - name: Cache Android SDK
        uses: actions/cache@v4
        with:
          path: /usr/local/lib/android
          key: android-sdk-${{ runner.os }}-${{ hashFiles('android/app/build.gradle') }}
          restore-keys: |
            android-sdk-${{ runner.os }}-
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.3
          bundler-cache: false

      - name: Setup Flutter
        uses: flutter-actions/setup-flutter@v4
        with:
          channel: stable
          version: latest
          cache: true
      - run: flutter --version
      - run: flutter pub get

      - name: Update version with build number
        run: |
          CURRENT_VERSION=$(grep '^version:' pubspec.yaml | sed 's/version: //')
          NEW_VERSION="${CURRENT_VERSION}+${{ github.run_number }}"
          sed -i "s/^version: .*/version: ${NEW_VERSION}/" pubspec.yaml

          echo "Updated version from ${CURRENT_VERSION} to ${NEW_VERSION}"
      - run: flutter build appbundle --flavor production
      - run: flutter build apk --flavor production

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: app-release-bundle
          path: |
            build/app/outputs/bundle/productionRelease/app-production-release.aab
            build/app/outputs/flutter-apk/app-production-release.apk
